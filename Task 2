# Step 1: Install and import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Step 2: Upload the file in Colab
from google.colab import files
uploaded = files.upload()  # Upload WineQT.csv when prompted

# Step 3: Load the dataset
df = pd.read_csv('WineQT.csv')  # File name should match uploaded name
print("First 5 rows of the dataset:")
print(df.head())

# Step 4: Data exploration
print("\nDataset Info:")
print(df.info())

print("\nMissing values:")
print(df.isnull().sum())

# Step 5: Visualize correlations
plt.figure(figsize=(10,8))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title("Feature Correlation")
plt.show()

# Step 6: Feature-target split
X = df.drop('quality', axis=1)
y = df['quality']

# Optional: Convert to binary classification (good vs bad quality)
# y = y.apply(lambda q: 1 if q >= 7 else 0)

# Step 7: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 8: Train a Random Forest model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 9: Evaluate the model
y_pred = model.predict(X_test)
print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))
print("\nClassification Report:")
print(classification_report(y_test, y_pred))
print("\nAccuracy Score:", accuracy_score(y_test, y_pred))
